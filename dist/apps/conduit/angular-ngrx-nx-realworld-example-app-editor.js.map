{"version":3,"sources":["webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/+state/editor.effects.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/+state/editor.facade.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/+state/editor.reducer.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/+state/editor.selectors.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/article-editor/article-editor.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/article-editor/article-editor.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/article-editor/article-editor.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/editor-resolver.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/editor.module.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/editor/src/lib/editor.service.ts"],"names":[],"mappings":"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","file":"angular-ngrx-nx-realworld-example-app-editor.js","sourcesContent":["import { NgrxFormsFacade, SetErrors } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, withLatestFrom } from 'rxjs/operators';\n\nimport { EditorService } from '../editor.service';\nimport { EditorActionsType, LoadArticle, PublishArticle } from './editor.actions';\nimport * as fromActions from './editor.actions';\n\n@Injectable()\nexport class EditorEffects {\n  @Effect()\n  editor = this.actions\n    .ofType<PublishArticle>(EditorActionsType.PUBLISH_ARTICLE)\n    .pipe(\n      withLatestFrom(this.ngrxFormsFacade.data$),\n      concatMap(([_, data]) =>\n        this.editorService\n          .publishArticle(data)\n          .pipe(\n            map(result => ({ type: '[router] Go', payload: { path: ['article', result.slug] } })),\n            catchError(result => of(new SetErrors(result.error.errors)))\n          )\n      )\n    );\n\n  @Effect()\n  loadArticle = this.actions\n    .ofType<LoadArticle>(EditorActionsType.LOAD_ARTICLE)\n    .pipe(\n      concatMap(action =>\n        this.editorService\n          .get(action.payload)\n          .pipe(\n            map(results => new fromActions.LoadArticleSuccess(results)),\n            catchError(error => of(new fromActions.LoadArticleFail(error)))\n          )\n      )\n    );\n\n  constructor(\n    private actions: Actions,\n    private ngrxFormsFacade: NgrxFormsFacade,\n    private editorService: EditorService\n  ) {}\n}\n","import { ArticleData } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { InitializeArticle, LoadArticle, LoadArticleFail, LoadArticleSuccess, PublishArticle } from './editor.actions';\nimport { EditorState } from './editor.reducer';\nimport { editorQuery } from './editor.selectors';\n\n@Injectable()\nexport class EditorFacade {\n  article$ = this.store.select(editorQuery.getArticle);\n\n  constructor(private store: Store<EditorState>) {}\n\n  loadArticle(slug: string) {\n    this.store.dispatch(new LoadArticle(slug));\n  }\n\n  loadArticleSuccess(results: ArticleData) {\n    this.store.dispatch(new LoadArticleSuccess(results));\n  }\n\n  loadArticleFail(error: Error) {\n    this.store.dispatch(new LoadArticleFail(error));\n  }\n\n  publishArticle() {\n    this.store.dispatch(new PublishArticle());\n  }\n\n  initializeArticle() {\n    this.store.dispatch(new InitializeArticle());\n  }\n}\n","import { ArticleData } from '@angular-ngrx-nx-realworld-example-app/api';\n\nimport { EditorAction, EditorActionsType } from './editor.actions';\n\nexport interface Editor {\n  article: ArticleData;\n}\n\nexport interface EditorState {\n  readonly editor: Editor;\n}\n\nexport const editorInitialState: Editor = {\n  article: {\n    slug: '',\n    title: '',\n    description: '',\n    body: '',\n    tagList: [],\n    createdAt: '',\n    updatedAt: '',\n    favorited: false,\n    images: [],\n    favoritesCount: 0,\n    author: {\n      name: '',\n      image: ''\n    }\n  }\n};\n\nexport function editorReducer(state: Editor, action: EditorAction): Editor {\n  switch (action.type) {\n    case EditorActionsType.LOAD_ARTICLE_SUCCESS: {\n      return { ...state, article: action.payload };\n    }\n    case EditorActionsType.LOAD_ARTICLE_FAIL:\n    case EditorActionsType.INITIALIZE_ARTICLE: {\n      return editorInitialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { EditorState, Editor } from './editor.reducer';\n\nconst getEditor = createFeatureSelector<Editor>('editor');\nexport const getArticle = createSelector(getEditor, (state: Editor) => state.article);\n\nexport const editorQuery = {\n  getArticle\n};\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2VkaXRvci9zcmMvbGliL2FydGljbGUtZWRpdG9yL2FydGljbGUtZWRpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"editor-page\\\">\\n\\t<div class=\\\"container page\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t<div class=\\\"col-md-10 offset-md-1 col-xs-12\\\">\\n\\n\\t\\t\\t\\t<app-list-errors></app-list-errors>\\n\\n\\t\\t\\t\\t<app-dynamic-form (updateForm)=\\\"updateForm($event)\\\" [data$]=\\\"data$\\\" [structure$]=\\\"structure$\\\">\\n\\t\\t\\t\\t</app-dynamic-form>\\n\\n\\t\\t\\t\\t<button class=\\\"btn btn-lg pull-xs-right btn-primary\\\" type=\\\"button\\\" (click)=\\\"submit()\\\">\\n\\t\\t\\t\\t\\tPublish Article\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Field, NgrxFormsFacade } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { EditorFacade } from '../+state/editor.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'title',\n    placeholder: 'Article Title',\n    validator: [Validators.required]\n  },\n  {\n    type: 'INPUT',\n    name: 'description',\n    placeholder: \"What's this article about?\",\n    validator: [Validators.required]\n  },\n  {\n    type: 'TEXTAREA',\n    name: 'body',\n    placeholder: 'Write your article (in markdown)',\n    validator: [Validators.required]\n  },\n  {\n    type: 'INPUT',\n    name: 'tagList',\n    placeholder: 'Enter Tags',\n    validator: []\n  }\n];\n\n@Component({\n  selector: 'app-article-editor',\n  templateUrl: './article-editor.component.html',\n  styleUrls: ['./article-editor.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ArticleEditorComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private router: Router, private facade: EditorFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n    this.facade.article$.subscribe(article => this.ngrxFormsFacade.setData(article));\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.publishArticle();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n    this.facade.initializeArticle();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Resolve } from '@angular/router/src/interfaces';\nimport { Observable, of } from 'rxjs';\n\nimport { EditorFacade } from './+state/editor.facade';\n\n@Injectable()\nexport class EditorResolverService implements Resolve<Observable<boolean>> {\n  constructor(private facade: EditorFacade) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    const slug = route.params['slug'];\n    if (slug) {\n      this.facade.loadArticle(slug);\n    }\n    return of(true);\n  }\n}\n","import { AuthGuardService } from '@angular-ngrx-nx-realworld-example-app/auth';\nimport { NgrxFormsModule } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { EditorEffects } from './+state/editor.effects';\nimport { EditorFacade } from './+state/editor.facade';\nimport { editorReducer, editorInitialState } from './+state/editor.reducer';\nimport { ArticleEditorComponent } from './article-editor/article-editor.component';\nimport { EditorResolverService } from './editor-resolver.service';\nimport { EditorService } from './editor.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgrxFormsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: ArticleEditorComponent,\n        resolve: { EditorResolverService },\n        canActivate: [AuthGuardService]\n      },\n      { path: ':slug', component: ArticleEditorComponent, resolve: { EditorResolverService } }\n    ]),\n    StoreModule.forFeature('editor', editorReducer, { initialState: editorInitialState }),\n    EffectsModule.forFeature([EditorEffects])\n  ],\n  declarations: [ArticleEditorComponent],\n  providers: [EditorEffects, EditorService, EditorResolverService, EditorFacade]\n})\nexport class EditorModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService, ArticleData } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class EditorService {\n  constructor(private apiService: ApiService) {}\n\n  publishArticle(article): Observable<ArticleData> {\n    if (article.slug) {\n      return this.apiService.put('/articles/' + article.slug, { article: article }).pipe(map(data => data.article));\n    }\n    return this.apiService.post('/articles/', { article: article }).pipe(map(data => data.article));\n  }\n\n  get(slug: string): Observable<ArticleData> {\n    return this.apiService.get('/articles/' + slug).pipe(map((data: any) => data.article));\n  }\n}\n"],"sourceRoot":""}