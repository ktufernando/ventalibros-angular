{"version":3,"sources":["webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/api/src/index.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/api/src/lib/api.module.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/api/src/lib/api.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/index.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/+state/auth.actions.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/+state/auth.effects.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/+state/auth.facade.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/+state/auth.reducer.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/+state/auth.selectors.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/auth-guard.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/auth.module.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/auth.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/local-storage-jwt.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/login/login.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/login/login.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/login/login.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/register/register.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/register/register.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/register/register.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/auth/src/lib/token-interceptor.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/index.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/+state/ngrx-error.actions.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/+state/ngrx-error.effects.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/+state/ngrx-error.facade.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/+state/ngrx-error.reducer.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/ngrx-error-interceptor.service.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-error/src/lib/ngrx-error.module.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/index.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/+state/ngrx-forms.actions.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/+state/ngrx-forms.effects.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/+state/ngrx-forms.facade.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/+state/ngrx-forms.reducer.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/+state/ngrx-forms.selectors.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/dynamic-form/dynamic-field.directive.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/dynamic-form/dynamic-form.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/input/input.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/input/input.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/input/input.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/textarea/textarea.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/textarea/textarea.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/fields/textarea/textarea.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/list-errors/list-errors.component.css","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/list-errors/list-errors.component.html","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/list-errors/list-errors.component.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-forms/src/lib/ngrx-forms.module.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-router/src/index.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-router/src/lib/+state/custom-serializer.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-router/src/lib/+state/router.effects.ts","webpack:////home/fer/sources/propio/libros/angular-ngrx-nx-realworld-example-app/libs/ngrx-router/src/lib/ngrx-router.module.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/layout/footer/footer.component.css","webpack:///./src/app/layout/footer/footer.component.html","webpack:///./src/app/layout/footer/footer.component.ts","webpack:///./src/app/layout/navbar/navbar.component.css","webpack:///./src/app/layout/navbar/navbar.component.html","webpack:///./src/app/layout/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export { ApiModule } from './lib/api.module';\nexport { ApiService } from './lib/api.service';\nexport * from './lib/types';\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiService } from './api.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  providers: [ApiService]\n})\nexport class ApiModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  get(url: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${environment.api_url}${url}`, { headers: this.headers, params });\n  }\n\n  post(url: string, data: Object = {}): Observable<any> {\n    return this.http.post(`${environment.api_url}${url}`, JSON.stringify(data), { headers: this.headers });\n  }\n\n  put(url: string, data: Object = {}): Observable<any> {\n    return this.http.put(`${environment.api_url}${url}`, JSON.stringify(data), { headers: this.headers });\n  }\n\n  delete(url: string): Observable<any> {\n    return this.http.delete(`${environment.api_url}${url}`, { headers: this.headers });\n  }\n\n  get headers(): HttpHeaders {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    };\n\n    return new HttpHeaders(headersConfig);\n  }\n}\n","export { AuthModule } from './lib/auth.module';\nexport * from './lib/+state/auth.actions';\nexport * from './lib/+state/auth.reducer';\nexport * from './lib/+state/auth.facade';\nexport * from './lib/auth-guard.service';\nexport * from './lib/local-storage-jwt.service';\n","import { User } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { Action } from '@ngrx/store';\n\nexport const enum AuthActionTypes {\n  GET_USER = '[auth] GET_USER',\n  GET_USER_SUCCESS = '[auth] GET_USER_SUCCESS',\n  GET_USER_FAIL = '[auth] GET_USER_FAIL',\n  LOGIN = '[auth] LOGIN',\n  LOGIN_SUCCESS = '[auth] LOGIN_SUCCESS',\n  LOGIN_FAIL = '[auth] LOGIN_FAIL',\n  REGISTER = '[auth] REGISTER',\n  REGISTER_SUCCESS = '[auth] REGISTER_SUCCESS',\n  REGISTER_FAIL = '[auth] REGISTER_FAIL',\n  LOGOUT = '[auth] LOGOUT'\n}\n\nexport class GetUser implements Action {\n  readonly type = AuthActionTypes.GET_USER;\n}\n\nexport class GetUserSuccess implements Action {\n  readonly type = AuthActionTypes.GET_USER_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class GetUserFail implements Action {\n  readonly type = AuthActionTypes.GET_USER_FAIL;\n  constructor(public payload: Error) {}\n}\n\nexport class Login implements Action {\n  readonly type = AuthActionTypes.LOGIN;\n}\n\nexport class LoginSuccess implements Action {\n  readonly type = AuthActionTypes.LOGIN_SUCCESS;\n\n  constructor(public payload: User) {}\n}\n\nexport class LoginFail implements Action {\n  readonly type = AuthActionTypes.LOGIN_FAIL;\n}\n\nexport class Register implements Action {\n  readonly type = AuthActionTypes.REGISTER;\n}\n\nexport class RegisterSuccess implements Action {\n  readonly type = AuthActionTypes.REGISTER_SUCCESS;\n\n  constructor(public payload: User) {}\n}\n\nexport class RegisterFail implements Action {\n  readonly type = AuthActionTypes.REGISTER_FAIL;\n}\n\nexport class Logout implements Action {\n  readonly type = AuthActionTypes.LOGOUT;\n}\n\nexport type AuthAction =\n  | GetUser\n  | GetUserFail\n  | GetUserSuccess\n  | Login\n  | LoginSuccess\n  | LoginFail\n  | Register\n  | RegisterSuccess\n  | RegisterFail\n  | Logout;\n","import { ApiService } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { AuthService } from '../auth.service';\nimport { NgrxFormsState, NgrxFormsFacade } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport * as fromNgrxForms from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { catchError, exhaustMap, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\n\nimport * as fromActions from './auth.actions';\nimport { AuthActionTypes, GetUser, Login, LoginSuccess, Register, RegisterSuccess, Logout } from './auth.actions';\nimport { LocalStorageJwtService } from '../local-storage-jwt.service';\n\n@Injectable()\nexport class AuthEffects {\n\t@Effect()\n\tgetUser$ = this.actions\n\t\t.ofType<GetUser>(AuthActionTypes.GET_USER)\n\t\t.pipe(\n\t\t\tswitchMap(item =>\n\t\t\t\tthis.authService.user()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(data => new fromActions.GetUserSuccess(data.user)),\n\t\t\t\t\t\tcatchError(error => of(new fromActions.GetUserFail(error)))\n\t\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t@Effect()\n\tlogin$ = this.actions\n\t\t.ofType<Login>(AuthActionTypes.LOGIN)\n\t\t.pipe(\n\t\t\twithLatestFrom(this.ngrxFormsFacade.data$),\n\t\t\texhaustMap(([action, data]) =>\n\t\t\t\tthis.authService\n\t\t\t\t\t.login(data)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(user => new fromActions.LoginSuccess(user)),\n\t\t\t\t\t\tcatchError(result => of(new fromNgrxForms.SetErrors(result.error.errors)))\n\t\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t@Effect({ dispatch: false })\n\tloginOrRegisterSuccess$ = this.actions\n\t\t.ofType<LoginSuccess | RegisterSuccess>(AuthActionTypes.LOGIN_SUCCESS, AuthActionTypes.REGISTER_SUCCESS)\n\t\t.pipe(\n\t\t\ttap(action => {\n\t\t\t\tthis.localStorageJwtService.setItem(action.payload.token);\n\t\t\t\tthis.router.navigateByUrl('/');\n\t\t\t})\n\t\t);\n\n\t@Effect()\n\tregister$ = this.actions\n\t\t.ofType<Register>(AuthActionTypes.REGISTER)\n\t\t.pipe(\n\t\t\twithLatestFrom(this.ngrxFormsFacade.data$),\n\t\t\texhaustMap(([action, data]) =>\n\t\t\t\tthis.authService\n\t\t\t\t\t.register(data)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(user => new fromActions.RegisterSuccess(user)),\n\t\t\t\t\t\tcatchError(result => of(new fromNgrxForms.SetErrors(result.error.errors)))\n\t\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t@Effect({ dispatch: false })\n\tlogout$ = this.actions.ofType<Logout>(AuthActionTypes.LOGOUT).pipe(\n\t\ttap(action => {\n\t\t\tthis.localStorageJwtService.removeItem();\n\t\t\tthis.router.navigateByUrl('/login');\n\t\t})\n\t);\n\n\tconstructor(\n\t\tprivate actions: Actions,\n\t\tprivate localStorageJwtService: LocalStorageJwtService,\n\t\tprivate ngrxFormsFacade: NgrxFormsFacade,\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router\n\t) { }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { GetUser, Login, Logout, Register } from './auth.actions';\nimport { AuthState } from './auth.reducer';\nimport { authQuery } from './auth.selectors';\n\n@Injectable()\nexport class AuthFacade {\n\tauht$ = this.store.select(authQuery.getAuth);\n\tuser$ = this.store.select(authQuery.getUser);\n\tisLoggedIn$ = this.store.select(authQuery.getLoggedIn);\n\n\tconstructor(private store: Store<AuthState>) { }\n\n\tlogin() {\n\t\tthis.store.dispatch(new Login());\n\t}\n\n\tlogout() {\n\t\tthis.store.dispatch(new Logout());\n\t}\n\n\tregister() {\n\t\tthis.store.dispatch(new Register());\n\t}\n\n\tuser() {\n\t\tthis.store.dispatch(new GetUser());\n\t}\n}\n","import { User } from '@angular-ngrx-nx-realworld-example-app/api';\n\nimport { AuthAction, AuthActionTypes } from './auth.actions';\n\nexport interface Auth {\n  loggedIn: boolean;\n  user: User;\n  status: Status;\n}\n\nexport interface AuthState {\n  readonly auth: Auth;\n}\n\nexport type Status = 'INIT' | 'IN_PROGRESS';\n\nexport const authInitialState: Auth = {\n  loggedIn: false,\n  status: 'INIT',\n  user: {\n    email: '',\n    token: '',\n    username: '',\n    bio: '',\n    image: ''\n  }\n};\n\nexport function authReducer(state: Auth, action: AuthAction): Auth {\n  switch (action.type) {\n    case AuthActionTypes.GET_USER_SUCCESS: {\n      return {\n        ...state,\n        loggedIn: true,\n        user: action.payload\n      };\n    }\n    case AuthActionTypes.GET_USER_FAIL: {\n      return authInitialState;\n    }\n    case AuthActionTypes.LOGIN:\n    case AuthActionTypes.REGISTER: {\n      return { ...state, status: 'IN_PROGRESS' };\n    }\n    case AuthActionTypes.REGISTER_SUCCESS:\n    case AuthActionTypes.LOGIN_SUCCESS: {\n      return {\n        ...state,\n        loggedIn: true,\n        status: 'INIT',\n        user: action.payload\n      };\n    }\n    case AuthActionTypes.LOGIN_FAIL:\n    case AuthActionTypes.REGISTER_FAIL: {\n      return { ...state, status: 'INIT' };\n    }\n    case AuthActionTypes.LOGOUT: {\n      return authInitialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { AuthState, Auth } from './auth.reducer';\n\nexport const getAuth = createFeatureSelector<Auth>('auth');\nexport const getLoggedIn = createSelector(getAuth, (auth: Auth) => auth.loggedIn);\nexport const getUser = createSelector(getAuth, (auth: Auth) => auth.user);\n\nexport const authQuery = {\n  getAuth,\n  getLoggedIn,\n  getUser\n};\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private storage: LocalStorageJwtService, private router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    return this.storage.getItem().pipe(\n      map(token => {\n        if (!token) {\n          this.router.navigate(['/login']);\n          return false;\n        }\n        return true;\n      }),\n      take(1)\n    );\n  }\n}\n","import { NgrxFormsModule } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthEffects } from './+state/auth.effects';\nimport { AuthFacade } from './+state/auth.facade';\nimport { authInitialState, authReducer } from './+state/auth.reducer';\nimport { AuthGuardService } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\n\nconst authRouting: ModuleWithProviders = RouterModule.forChild([\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  }\n]);\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgrxFormsModule,\n    authRouting,\n    StoreModule.forFeature('auth', authReducer, { initialState: authInitialState }),\n    EffectsModule.forFeature([AuthEffects])\n  ],\n  providers: [\n    AuthEffects,\n    AuthGuardService,\n    AuthService,\n    AuthFacade,\n    TokenInterceptorService,\n    LocalStorageJwtService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  declarations: [LoginComponent, RegisterComponent]\n})\nexport class AuthModule {}\n","import { ApiService, User } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(private apiService: ApiService) { }\n\n\tuser(): Observable<{ user: User }> {\n\t\treturn this.apiService.get('/user');\n\t}\n\n\tlogin(credentials: { email: string, password: string }): Observable<User> {\n\t\treturn this.apiService.post('/users/login', { user: credentials }).pipe(map(r => r.user));\n\t}\n\n\tregister(credentials: { username: string, email: string, password: string }): Observable<User> {\n\t\treturn this.apiService.post('/users', { user: credentials }).pipe(map(r => r.user));\n\t}\n}\n","import { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageJwtService {\n  getItem(): Observable<string | null> {\n    const data = localStorage.getItem('jwtToken');\n    if (data) {\n      return of(data);\n    }\n    return of(null);\n  }\n\n  setItem(data: string): Observable<string> {\n    localStorage.setItem('jwtToken', data);\n    return of(data);\n  }\n\n  removeItem(): Observable<boolean> {\n    localStorage.removeItem('jwtToken');\n    return of(true);\n  }\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2F1dGgvc3JjL2xpYi9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"auth-page\\\">\\n\\t<div class=\\\"container page\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t<div class=\\\"col-md-6 offset-md-3 col-xs-12\\\">\\n\\t\\t\\t\\t<h1 class=\\\"text-xs-center\\\">Ingreso</h1>\\n\\t\\t\\t\\t<p class=\\\"text-xs-center\\\">\\n\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/register']\\\">Necesitas una cuenta?</a>\\n\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t<app-list-errors></app-list-errors>\\n\\n\\t\\t\\t\\t<app-dynamic-form (updateForm)=\\\"updateForm($event)\\\" [data$]=\\\"data$\\\" [structure$]=\\\"structure$\\\">\\n\\t\\t\\t\\t</app-dynamic-form>\\n\\t\\t\\t\\t<button (click)=\\\"submit()\\\" class=\\\"btn btn-lg btn-primary pull-xs-right\\\" type=\\\"submit\\\">\\n\\t\\t\\t\\t\\tIngresar\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Field, NgrxFormsFacade } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Usuario',\n    validator: [Validators.required]\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Contraseña',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password'\n    }\n  }\n];\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.login();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL2F1dGgvc3JjL2xpYi9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"auth-page\\\">\\n\\t<div class=\\\"container page\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\n\\t\\t\\t<div class=\\\"col-md-6 offset-md-3 col-xs-12\\\">\\n\\t\\t\\t\\t<h1 class=\\\"text-xs-center\\\">Registro</h1>\\n\\t\\t\\t\\t<p class=\\\"text-xs-center\\\">\\n\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/login']\\\">Tenes una cuenta?</a>\\n\\t\\t\\t\\t</p>\\n\\n\\t\\t\\t\\t<app-list-errors></app-list-errors>\\n\\n\\t\\t\\t\\t<app-dynamic-form (updateForm)=\\\"updateForm($event)\\\" [data$]=\\\"data$\\\" [structure$]=\\\"structure$\\\">\\n\\t\\t\\t\\t</app-dynamic-form>\\n\\t\\t\\t\\t<button (click)=\\\"submit()\\\" class=\\\"btn btn-lg btn-primary pull-xs-right\\\" type=\\\"submit\\\">\\n\\t\\t\\t\\t\\tRegistrar\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Field, NgrxFormsFacade } from '@angular-ngrx-nx-realworld-example-app/ngrx-forms';\nimport { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AuthFacade } from '../+state/auth.facade';\n\nconst structure: Field[] = [\n  {\n    type: 'INPUT',\n    name: 'username',\n    placeholder: 'Usuario',\n    validator: [Validators.required]\n  },\n  {\n    type: 'INPUT',\n    name: 'email',\n    placeholder: 'Email',\n    validator: [Validators.required]\n  },\n  {\n    type: 'INPUT',\n    name: 'password',\n    placeholder: 'Contraseña',\n    validator: [Validators.required],\n    attrs: {\n      type: 'password'\n    }\n  }\n];\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  structure$: Observable<Field[]>;\n  data$: Observable<any>;\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private facade: AuthFacade) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.setStructure(structure);\n    this.data$ = this.ngrxFormsFacade.data$;\n    this.structure$ = this.ngrxFormsFacade.structure$;\n  }\n\n  updateForm(changes: any) {\n    this.ngrxFormsFacade.updateData(changes);\n  }\n\n  submit() {\n    this.facade.register();\n  }\n\n  ngOnDestroy() {\n    this.ngrxFormsFacade.initializeForm();\n  }\n}\n","import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HttpInterceptor } from '@angular/common/http/src/interceptor';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { LocalStorageJwtService } from './local-storage-jwt.service';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private localStorage: LocalStorageJwtService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token: string;\n    this.localStorage.getItem().subscribe(t => (token = t));\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Token ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n","export { NgrxErrorModule } from './lib/ngrx-error.module';\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Action } from '@ngrx/store';\n\nexport enum NgrxErrorActionTypes {\n  THROW_401_ERROR = '[ngrx-error] THROW_401_ERROR',\n  THROW_404_ERROR = '[ngrx-error] THROW_404_ERROR'\n}\n\nexport class Throw401Error implements Action {\n  readonly type = NgrxErrorActionTypes.THROW_401_ERROR;\n  constructor(public payload: HttpErrorResponse) {}\n}\n\nexport class Throw404Error implements Action {\n  readonly type = NgrxErrorActionTypes.THROW_404_ERROR;\n  constructor(public payload: HttpErrorResponse) {}\n}\n\nexport type NgrxErrorAction = Throw401Error | Throw404Error;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { map } from 'rxjs/operators';\n\nimport { NgrxErrorActionTypes, Throw401Error, Throw404Error } from './ngrx-error.actions';\n\n@Injectable()\nexport class NgrxErrorEffects {\n\t@Effect()\n\terror401 = this.actions\n\t\t.ofType<Throw401Error>(NgrxErrorActionTypes.THROW_401_ERROR)\n\t\t.pipe(map(_ => ({ type: '[router] Go', payload: { path: ['/login'] } })));\n\n\t@Effect()\n\terror404 = this.actions\n\t\t.ofType<Throw404Error>(NgrxErrorActionTypes.THROW_404_ERROR)\n\t\t.pipe(map(_ => ({ type: '[router] Go', payload: { path: ['/'] } })));\n\n\tconstructor(private actions: Actions) { }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { Throw401Error, Throw404Error } from './ngrx-error.actions';\nimport { NgrxErrorState } from './ngrx-error.reducer';\n\n@Injectable()\nexport class NgrxErrorFacade {\n  constructor(private store: Store<NgrxErrorState>) {}\n\n  throw401Error(error: HttpErrorResponse) {\n    this.store.dispatch(new Throw401Error(error));\n  }\n\n  throw404Error(error: HttpErrorResponse) {\n    this.store.dispatch(new Throw404Error(error));\n  }\n}\n","import { NgrxErrorAction, NgrxErrorActionTypes } from './ngrx-error.actions';\n\nexport interface NgrxError {\n  code: number;\n  message?: string;\n}\n\nexport interface NgrxErrorState {\n  readonly ngrxError: NgrxError;\n}\n\nexport const ngrxErrorInitialState: NgrxError = {\n  code: -1\n};\n\nexport function ngrxErrorReducer(state: NgrxError, action: NgrxErrorAction): NgrxError {\n  switch (action.type) {\n    case NgrxErrorActionTypes.THROW_401_ERROR: {\n      return { code: action.payload.status, message: action.payload.message };\n    }\n    case NgrxErrorActionTypes.THROW_404_ERROR: {\n      return { code: action.payload.status, message: action.payload.message };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HttpInterceptor } from '@angular/common/http/src/interceptor';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\n\n@Injectable()\nexport class NgrxErrorInterceptorService implements HttpInterceptor {\n  constructor(private facade: NgrxErrorFacade) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((error, caught) => {\n        if (error instanceof HttpErrorResponse) {\n          switch (error.status) {\n            case 401:\n              this.facade.throw401Error(error);\n              break;\n            case 404:\n              this.facade.throw404Error(error);\n              break;\n            default:\n              throwError(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { ErrorHandler, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { NgrxErrorEffects } from './+state/ngrx-error.effects';\nimport { ngrxErrorReducer, ngrxErrorInitialState } from './+state/ngrx-error.reducer';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgrxErrorInterceptorService } from './ngrx-error-interceptor.service';\nimport { NgrxErrorFacade } from './+state/ngrx-error.facade';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature('ngrxError', ngrxErrorReducer, { initialState: ngrxErrorInitialState }),\n    EffectsModule.forFeature([NgrxErrorEffects])\n  ],\n  providers: [\n    NgrxErrorFacade,\n    NgrxErrorEffects,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgrxErrorInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class NgrxErrorModule {}\n","export { NgrxFormsModule } from './lib/ngrx-forms.module';\nexport * from './lib/+state/ngrx-forms.actions';\nexport * from './lib/+state/ngrx-forms.reducer';\nexport * from './lib/+state/ngrx-forms.facade';\n","import { Errors } from './ngrx-forms.reducer';\nimport { Action } from '@ngrx/store';\n\nexport enum NgrxFormsActionTypes {\n  SET_DATA = '[ngrxForms] SET_DATA',\n  UPDATE_DATA = '[ngrxForms] UPDATE_DATA',\n  SET_STRUCTURE = '[ngrxForms] SET_STRUCTURE',\n  SET_ERRORS = '[ngrxForms] SET_ERRORS',\n  INITIALIZE_ERRORS = '[ngrxForms] INITIALIZE_ERRORS',\n  INITIALIZE_FORM = '[ngrxForms] INITIALIZE_FORM',\n  RESET_FORM = '[ngrxForms] RESET_FORM'\n}\n\nexport class SetData implements Action {\n  readonly type = NgrxFormsActionTypes.SET_DATA;\n  constructor(public payload: any) {}\n}\n\nexport class UpdateData implements Action {\n  readonly type = NgrxFormsActionTypes.UPDATE_DATA;\n  constructor(public payload: any) {}\n}\n\nexport class SetStructure implements Action {\n  readonly type = NgrxFormsActionTypes.SET_STRUCTURE;\n  constructor(public payload: any) {}\n}\n\nexport class SetErrors implements Action {\n  readonly type = NgrxFormsActionTypes.SET_ERRORS;\n  constructor(public payload: Errors) {}\n}\n\nexport class InitializeErrors implements Action {\n  readonly type = NgrxFormsActionTypes.INITIALIZE_ERRORS;\n}\n\nexport class InitializeForm implements Action {\n  readonly type = NgrxFormsActionTypes.INITIALIZE_FORM;\n}\n\nexport class ResetForm implements Action {\n  readonly type = NgrxFormsActionTypes.RESET_FORM;\n}\n\nexport type NgrxFormsAction =\n  | SetData\n  | UpdateData\n  | SetStructure\n  | SetErrors\n  | InitializeErrors\n  | InitializeForm\n  | ResetForm;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { SetData, UpdateData, NgrxFormsActionTypes } from './ngrx-forms.actions';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable()\nexport class NgrxFormsEffects {\n  @Effect()\n  setData = this.actions\n    .ofType<SetData | UpdateData>(NgrxFormsActionTypes.SET_DATA, NgrxFormsActionTypes.UPDATE_DATA)\n    .pipe(\n      map(action => ({\n        type: NgrxFormsActionTypes.INITIALIZE_ERRORS\n      }))\n    );\n\n  constructor(private actions: Actions) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { SetData, SetStructure, UpdateData, InitializeForm, InitializeErrors, ResetForm } from './ngrx-forms.actions';\nimport { NgrxFormsState } from './ngrx-forms.reducer';\nimport { ngrxFormsQuery } from './ngrx-forms.selectors';\n\n@Injectable()\nexport class NgrxFormsFacade {\n\tdata$ = this.store.select(ngrxFormsQuery.getData);\n\tstructure$ = this.store.select(ngrxFormsQuery.getStructure);\n\terrors$ = this.store.select(ngrxFormsQuery.getErrors);\n\ttouched$ = this.store.select(ngrxFormsQuery.getTouchedForm);\n\n\tconstructor(private store: Store<NgrxFormsState>) { }\n\n\tsetStructure(structure: any) {\n\t\tthis.store.dispatch(new SetStructure(structure));\n\t}\n\n\tsetData(data: any) {\n\t\tthis.store.dispatch(new SetData(data));\n\t}\n\n\tupdateData(data: any) {\n\t\tthis.store.dispatch(new UpdateData(data));\n\t}\n\n\tinitializeForm() {\n\t\tthis.store.dispatch(new InitializeForm());\n\t}\n\n\tinitializeErrors() {\n\t\tthis.store.dispatch(new InitializeErrors());\n\t}\n\n\tresetForm() {\n\t\tthis.store.dispatch(new ResetForm());\n\t}\n}\n","import { ValidatorFn } from '@angular/forms';\n\nimport { NgrxFormsAction, NgrxFormsActionTypes } from './ngrx-forms.actions';\n\nexport interface NgrxForms {\n  data: any;\n  structure: Field[];\n  valid: boolean;\n  errors: Errors;\n  touched: boolean;\n}\n\nexport interface NgrxFormsState {\n  readonly ngrxForms: NgrxForms;\n}\n\nexport interface Field {\n  type: FieldType;\n  name: string;\n  label?: string;\n  placeholder?: string;\n  validator?: ValidatorFn[];\n  attrs?: any;\n}\n\nexport type FieldType = 'INPUT' | 'TEXTAREA';\n\nexport interface Errors {\n  [key: string]: string;\n}\n\nexport const ngrxFormsInitialState: NgrxForms = {\n  data: {},\n  structure: [],\n  valid: true,\n  errors: {},\n  touched: false\n};\n\nexport function ngrxFormsReducer(state: NgrxForms, action: NgrxFormsAction): NgrxForms {\n  switch (action.type) {\n    case NgrxFormsActionTypes.SET_DATA: {\n      return { ...state, data: action.payload };\n    }\n    case NgrxFormsActionTypes.UPDATE_DATA: {\n      const data = { ...state.data, ...action.payload };\n      return { ...state, data, touched: true };\n    }\n    case NgrxFormsActionTypes.SET_STRUCTURE: {\n      const structure = action.payload.slice(0);\n      return { ...state, structure };\n    }\n    case NgrxFormsActionTypes.SET_ERRORS: {\n      return { ...state, errors: action.payload };\n    }\n    case NgrxFormsActionTypes.INITIALIZE_ERRORS: {\n      return { ...state, errors: {} };\n    }\n    case NgrxFormsActionTypes.INITIALIZE_FORM: {\n      return ngrxFormsInitialState;\n    }\n    case NgrxFormsActionTypes.RESET_FORM: {\n      return { ...state, touched: false };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { NgrxForms } from './ngrx-forms.reducer';\n\nconst getNgrxForms = createFeatureSelector<NgrxForms>('ngrxForms');\nexport const getStructure = createSelector(getNgrxForms, (state: NgrxForms) => state.structure);\nexport const getData = createSelector(getNgrxForms, (state: NgrxForms) => state.data);\nexport const isValid = createSelector(getNgrxForms, (state: NgrxForms) => state.valid);\nexport const getErrors = createSelector(getNgrxForms, (state: NgrxForms) => state.errors);\nexport const getTouchedForm = createSelector(getNgrxForms, (state: NgrxForms) => state.touched);\n\nexport const ngrxFormsQuery = {\n  getStructure,\n  getData,\n  isValid,\n  getErrors,\n  getTouchedForm\n};\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Type,\n  ViewContainerRef\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { Field } from '../+state/ngrx-forms.reducer';\nimport { InputComponent } from '../fields/input/input.component';\nimport { TextareaComponent } from '../fields/textarea/textarea.component';\n\nconst componentsMapper: { [key: string]: Type<any> } = {\n  INPUT: InputComponent,\n  TEXTAREA: TextareaComponent\n};\n\n@Directive({\n  selector: '[appDynamicField]'\n})\nexport class DynamicFieldDirective implements OnInit, OnChanges {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n  component: ComponentRef<any>;\n\n  constructor(private resolver: ComponentFactoryResolver, private container: ViewContainerRef) {}\n\n  ngOnChanges() {\n    if (this.component) {\n      this.component.instance.field = this.field;\n      this.component.instance.group = this.group;\n    }\n  }\n\n  ngOnInit() {\n    const component = this.resolver.resolveComponentFactory<any>(componentsMapper[this.field.type]);\n    this.component = this.container.createComponent(component);\n    this.component.instance.field = this.field;\n    this.component.instance.group = this.group;\n  }\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL25ncngtZm9ybXMvc3JjL2xpYi9keW5hbWljLWZvcm0vZHluYW1pYy1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form class=\\\"dynamic-form\\\" [formGroup]=\\\"form\\\" autocomplete=\\\"off\\\">\\n\\t<ng-container *ngFor=\\\"let field of (structure$|async)\\\" appDynamicField [field]=\\\"field\\\" [group]=\\\"form\\\">\\n\\t</ng-container>\\n</form>\"","import { Field } from '../+state/ngrx-forms.reducer';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { combineLatest, debounceTime, map, takeUntil, tap, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicFormComponent implements OnInit, OnDestroy {\n  @Input() structure$: Observable<Field[]>;\n  @Input() data$: Observable<any>;\n  @Input() touchedForm$: Observable<boolean>;\n  @Output() updateForm: EventEmitter<any> = new EventEmitter();\n  unsubscribe$: Subject<void> = new Subject();\n  form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.structure$\n      .pipe(\n        map(this.formBuilder),\n        tap(f => (this.form = f)),\n        tap(f => this.listenFormChanges(f)),\n        combineLatest(this.data$),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(this.patchValue);\n\n    if (this.touchedForm$) {\n      this.touchedForm$\n        .pipe(filter(t => !t && !!this.form), takeUntil(this.unsubscribe$))\n        .subscribe(_ => this.form.reset());\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private formBuilder = (structure: Field[]): FormGroup => {\n    const group = this.fb.group({});\n    structure.forEach(field => group.addControl(field.name, this.control(field)));\n    return group;\n  };\n\n  private control = (field: Field): FormControl => {\n    return this.fb.control('', field.validator);\n  };\n\n  private patchValue = ([form, data]) => {\n    !!data ? form.patchValue(data, { emitEvent: false }) : form.patchValue({}, { emitEvent: false });\n  };\n\n  private listenFormChanges(form: FormGroup) {\n    form.valueChanges\n      .pipe(debounceTime(100), takeUntil(this.unsubscribe$))\n      .subscribe((changes: any) => this.updateForm.emit(changes));\n  }\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL25ncngtZm9ybXMvc3JjL2xpYi9maWVsZHMvaW5wdXQvaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<fieldset [formGroup]=\\\"group\\\" class=\\\"form-group\\\">\\n\\t<input [formControlName]=\\\"field?.name\\\" [attr.placeholder]=\\\"field?.placeholder\\\" class=\\\"form-control form-control-lg\\\" [attr.type]=\\\"field?.attrs?.type || 'text'\\\"\\n\\t/>\\n</fieldset>\"","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Field } from '../../+state/ngrx-forms.reducer';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InputComponent {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL25ncngtZm9ybXMvc3JjL2xpYi9maWVsZHMvdGV4dGFyZWEvdGV4dGFyZWEuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<fieldset [formGroup]=\\\"group\\\" class=\\\"form-group\\\">\\n\\t<textarea class=\\\"form-control form-control-lg\\\" [attr.rows]=\\\"field?.attrs?.rows || 5\\\" [formControlName]=\\\"field?.name\\\" [attr.placeholder]=\\\"field?.placeholder\\\">\\n\\t</textarea>\\n</fieldset>\"","import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { Field } from '../../+state/ngrx-forms.reducer';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextareaComponent {\n  @Input() field: Field;\n  @Input() group: FormGroup;\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaWJzL25ncngtZm9ybXMvc3JjL2xpYi9saXN0LWVycm9ycy9saXN0LWVycm9ycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ul class=\\\"error-messages\\\" *ngIf=\\\"errors?.length > 0\\\">\\n\\t<li *ngFor=\\\"let error of errors\\\">\\n\\t\\t{{ error }}\\n\\t</li>\\n</ul>\"","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { NgrxFormsFacade } from '../+state/ngrx-forms.facade';\n\n@Component({\n  selector: 'app-list-errors',\n  templateUrl: './list-errors.component.html',\n  styleUrls: ['./list-errors.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListErrorsComponent implements OnInit, OnDestroy {\n  errors: string[];\n  unsubscribe$: Subject<void> = new Subject();\n\n  constructor(private ngrxFormsFacade: NgrxFormsFacade, private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.ngrxFormsFacade.errors$.subscribe(e => {\n      this.errors = Object.keys(e || {}).map(key => `${key} ${e[key]}`);\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.ngrxFormsFacade.initializeErrors();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { NgrxFormsEffects } from './+state/ngrx-forms.effects';\nimport { NgrxFormsFacade } from './+state/ngrx-forms.facade';\nimport { ngrxFormsInitialState, ngrxFormsReducer } from './+state/ngrx-forms.reducer';\nimport { DynamicFieldDirective } from './dynamic-form/dynamic-field.directive';\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\nimport { InputComponent } from './fields/input/input.component';\nimport { TextareaComponent } from './fields/textarea/textarea.component';\nimport { ListErrorsComponent } from './list-errors/list-errors.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature('ngrxForms', ngrxFormsReducer, { initialState: ngrxFormsInitialState }),\n    EffectsModule.forFeature([NgrxFormsEffects])\n  ],\n  providers: [NgrxFormsEffects, NgrxFormsFacade],\n  declarations: [DynamicFormComponent, DynamicFieldDirective, InputComponent, TextareaComponent, ListErrorsComponent],\n  entryComponents: [InputComponent, TextareaComponent],\n  exports: [DynamicFormComponent, ListErrorsComponent]\n})\nexport class NgrxFormsModule {}\n","export { NgrxRouterModule } from './lib/ngrx-router.module';\n","import { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector } from '@ngrx/store';\n\nimport { RouterState, RouterStateUrl } from './router.interfaces';\n\nexport class CustomSerializer implements fromRouter.RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    const { url } = routerState;\n    const { queryParams } = routerState.root;\n\n    let state: ActivatedRouteSnapshot = routerState.root;\n    while (state.firstChild) {\n      state = state.firstChild;\n    }\n    const { params } = state;\n\n    return { url, queryParams, params };\n  }\n}\n","import { Back, Forward, Go } from './router.actions';\nimport { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterEffects {\n  @Effect({ dispatch: false })\n  navigate$ = this.action$\n    .ofType<Go>('[router] Go')\n    .pipe(\n      map((action: Go) => action.payload),\n      tap(({ path, query: queryParams, extras }) => this.router.navigate(path, { queryParams, ...extras }))\n    );\n\n  @Effect({ dispatch: false })\n  navigateBack$ = this.action$.ofType<Back>('[router] Back').pipe(tap(() => this.location.back()));\n\n  @Effect({ dispatch: false })\n  navigateForward$ = this.action$.ofType<Forward>('[router] Forward').pipe(tap(() => this.location.forward()));\n\n  constructor(private action$: Actions, private router: Router, private location: Location) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\n\nimport { CustomSerializer } from './+state/custom-serializer';\nimport { RouterEffects } from './+state/router.effects';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('router', routerReducer),\n    EffectsModule.forFeature([RouterEffects]),\n    StoreRouterConnectingModule.forRoot({ stateKey: 'router' })\n  ],\n  providers: [RouterEffects, [{ provide: RouterStateSerializer, useClass: CustomSerializer }]]\n})\nexport class NgrxRouterModule {}\n","var map = {\n\t\"@angular-ngrx-nx-realworld-example-app/article\": [\n\t\t\"../../libs/article/src/lib/article.module.ts\",\n\t\t\"common\",\n\t\t\"angular-ngrx-nx-realworld-example-app-article\"\n\t],\n\t\"@angular-ngrx-nx-realworld-example-app/editor\": [\n\t\t\"../../libs/editor/src/lib/editor.module.ts\",\n\t\t\"common\",\n\t\t\"angular-ngrx-nx-realworld-example-app-editor\"\n\t],\n\t\"@angular-ngrx-nx-realworld-example-app/home\": [\n\t\t\"../../libs/home/src/lib/home.module.ts\",\n\t\t\"default~angular-ngrx-nx-realworld-example-app-home~angular-ngrx-nx-realworld-example-app-profile\",\n\t\t\"common\",\n\t\t\"angular-ngrx-nx-realworld-example-app-home\"\n\t],\n\t\"@angular-ngrx-nx-realworld-example-app/mercadopago\": [\n\t\t\"../../libs/mercadopago/src/lib/mercadopago.module.ts\",\n\t\t\"common\"\n\t],\n\t\"@angular-ngrx-nx-realworld-example-app/profile\": [\n\t\t\"../../libs/profile/src/lib/profile.module.ts\",\n\t\t\"default~angular-ngrx-nx-realworld-example-app-home~angular-ngrx-nx-realworld-example-app-profile\",\n\t\t\"common\",\n\t\t\"angular-ngrx-nx-realworld-example-app-profile\"\n\t],\n\t\"@angular-ngrx-nx-realworld-example-app/settings\": [\n\t\t\"../../libs/settings/src/lib/settings.module.ts\",\n\t\t\"angular-ngrx-nx-realworld-example-app-settings\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2NvbmR1aXQvc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar [isLoggedIn]=\\\"isLoggedIn$ | async\\\" [user]=\\\"user$ | async\\\"></app-navbar>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { User } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { AuthFacade } from '@angular-ngrx-nx-realworld-example-app/auth';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { LocalStorageJwtService } from '@angular-ngrx-nx-realworld-example-app/auth';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  user$: Observable<User>;\n  isLoggedIn$: Observable<boolean>;\n\n  constructor(private authFacade: AuthFacade, private localStorageJwtService: LocalStorageJwtService) {}\n\n  ngOnInit() {\n    this.user$ = this.authFacade.user$;\n    this.isLoggedIn$ = this.authFacade.isLoggedIn$;\n    this.localStorageJwtService\n      .getItem()\n      .pipe(take(1), filter(token => !!token))\n      .subscribe(token => this.authFacade.user());\n  }\n}\n","import { ApiModule } from '@angular-ngrx-nx-realworld-example-app/api';\nimport { AuthModule } from '@angular-ngrx-nx-realworld-example-app/auth';\nimport { NgrxErrorModule } from '@angular-ngrx-nx-realworld-example-app/ngrx-error';\nimport { NgrxRouterModule } from '@angular-ngrx-nx-realworld-example-app/ngrx-router';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { NxModule } from '@nrwl/nx';\nimport { storeFreeze } from 'ngrx-store-freeze';\n\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { NavbarComponent } from './layout/navbar/navbar.component';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    AuthModule,\n    BrowserModule,\n    NxModule.forRoot(),\n    RouterModule.forRoot(\n      [\n        { path: '', loadChildren: '@angular-ngrx-nx-realworld-example-app/home#HomeModule' },\n        { path: 'article/:slug', loadChildren: '@angular-ngrx-nx-realworld-example-app/article#ArticleModule' },\n        { path: 'settings', loadChildren: '@angular-ngrx-nx-realworld-example-app/settings#SettingsModule' },\n        { path: 'editor', loadChildren: '@angular-ngrx-nx-realworld-example-app/editor#EditorModule' },\n        { path: 'profile/:username', loadChildren: '@angular-ngrx-nx-realworld-example-app/profile#ProfileModule' },\n        { path: 'mp/payment/success', loadChildren: '@angular-ngrx-nx-realworld-example-app/mercadopago#MercadopagoModule' }\n      ],\n      {\n        initialNavigation: 'enabled',\n        useHash: true\n      }\n    ),\n    StoreModule.forRoot({}, { metaReducers: !environment.production ? [storeFreeze] : [] }),\n    EffectsModule.forRoot([]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    NgrxRouterModule,\n    NgrxErrorModule\n  ],\n  declarations: [AppComponent, FooterComponent, NavbarComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2NvbmR1aXQvc3JjL2FwcC9sYXlvdXQvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<footer>\\n\\t<div class=\\\"container\\\">\\n\\t\\t<a href=\\\"/\\\" class=\\\"logo-font\\\">conduit</a>\\n\\t\\t<span class=\\\"attribution\\\">\\n\\t\\t\\tAn interactive learning project from\\n\\t\\t\\t<a href=\\\"https://thinkster.io\\\">Thinkster</a>. Code &amp; design licensed under MIT.\\n\\t\\t</span>\\n\\t</div>\\n</footer>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL2NvbmR1aXQvc3JjL2FwcC9sYXlvdXQvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-light\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Mercado de Libros</a>\\n\\t\\t<!-- Logged out user -->\\n\\t\\t<ul *ngIf=\\\"!isLoggedIn\\\" class=\\\"nav navbar-nav pull-xs-right\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<!-- Add \\\"active\\\" class when you're on that page\\\" -->\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Inicio</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Ingresa</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Registrate</a>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\n\\t\\t<!-- Logged in user -->\\n\\t\\t<ul *ngIf=\\\"isLoggedIn\\\" class=\\\"nav navbar-nav pull-xs-right\\\">\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<!-- Add \\\"active\\\" class when you're on that page\\\" -->\\n\\t\\t\\t\\t<a class=\\\"nav-link active\\\" [routerLink]=\\\"['/']\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Inicio</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<!--li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"/editor\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"ion-compose\\\"></i>&nbsp;New Post\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</li-->\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" routerLink=\\\"/settings\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<i class=\\\"ion-gear-a\\\"></i>&nbsp;Ajustes\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</li>\\n\\t\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t\\t<a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile', user.username]\\\" routerLinkActive=\\\"active\\\">\\n\\t\\t\\t\\t\\t<img [src]=\\\"user.image\\\" *ngIf=\\\"user.image\\\" class=\\\"user-pic\\\" /> {{ user.username }}\\n\\t\\t\\t\\t</a>\\n\\t\\t\\t</li>\\n\\t\\t</ul>\\n\\t</div>\\n</nav>\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { User } from '@angular-ngrx-nx-realworld-example-app/api';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavbarComponent {\n  @Input() user: User;\n  @Input() isLoggedIn: boolean;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  api_url: 'http://localhost:3000/api'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}